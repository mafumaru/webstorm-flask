# Python 3.6.x支持在数字中间位置使用单个下划线作为分隔来提高数字的可读性，类似于数学上使用逗号作为千位分隔符。
x = 1_000_000

#集合 & 集合交集、| 并集、^ 对称差集
set = {1,2,'3'}

# y = 0.5
y=1/2

# 求整商，就是java里面的int相除 int z = 7/5; (z=1) ,如果有实数则整商为实数
z=7//5
z2 =7.0//5 # z2=1.0

# 幂运算
a = 2 ** 3

# is 对象同一性测试，即测试是否为同一个对象或内存地址是否相同
b=8
c =b is a # True
x1 = [1, 2, 3]
y1 = [1, 2, 3]
z1 = x1 is y1 # False 上面形式创建的x和y不是同一个列

#把65分别格式化为字符和整数
d='%c, %d' % (65, 65) #d =  'A, 65'

# 不支持 a++ 这种自增表达式 ++i 意思是正正得正

#map对象，不是字典（dict）
abc = map(chr, (33891, 20184, 22269))

# 创建字典
dict1 = dict(zip('1234', 'abcde'))
# dict1 = {
#     '4': 'd',
#     '2': 'b',
#     '3': 'c',
#     '1': 'a'
# }

x, y, z = 1, 2, 3                   #多个变量同时赋值
v_tuple = (False, 3.5, 'exp')
x, y, z = v_tuple
#  (x, y, z) = v_tupley 也行

l1 = [1,2,3]
l2=[4,5,6]
l3 = l1+l2
l1.append(l2)
l1.extend(l2)
l2+=l3

print(x)